#!/bin/bash

# basic.... very very basic test
#set -o xtrace
set -o errexit

MQTT_BROKER='192.168.123.123'
TMP_OUTPUT=/tmp/basic_test.tmp

get_log_lines () {
  NUM_LINES=${1:-3}
  sleep 1.2  ; # give it a sec or 2 to finish...
  sudo journalctl -u mqtt2msg.service --no-pager --lines=${NUM_LINES} --output=cat > ${TMP_OUTPUT}
}

echo TEST: Check the basic message on
mosquitto_pub -h ${MQTT_BROKER} -t /garage/motion -m "on"
get_log_lines
grep --quiet -E 'Publishing /garage/motion as current_active_topic' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check publishing due to extra 'on' events
mosquitto_pub -h ${MQTT_BROKER} -t /garage/motion -m "on"
mosquitto_pub -h ${MQTT_BROKER} -t /garage/motion -m "on"
get_log_lines 3
CNT=$(grep --count -E 'Publishing /garage/motion as current_active_topic' ${TMP_OUTPUT})
[ ${CNT} -eq 3 ] || { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check the basic message off
mosquitto_pub -h ${MQTT_BROKER} -t /garage/motion -m "off"
get_log_lines
grep --quiet -E 'Unpublishing /garage/motion' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Dequeued all entries' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check the message priority
mosquitto_pub -h ${MQTT_BROKER} -t /garage/motion -m "on"
mosquitto_pub -h ${MQTT_BROKER} -t /laundry/motion -m "on"
get_log_lines
# Should not have message, because /garage/motion has higher priority
grep --quiet -E 'Publishing /laundry/motion' ${TMP_OUTPUT} && { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check the message activation through promotion
mosquitto_pub -h ${MQTT_BROKER} -t /garage/motion -m "off"
get_log_lines
# Should now have /laundry/motion promoted
grep --quiet -E 'Dequeued /garage/motion was the active entry' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Publishing /laundry/motion' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check the message removal expiration
# Wait a few seconds and make sure /laundry/motion gets dequeued
sleep 6
get_log_lines 5
grep --quiet -E 'Expired /laundry/motion' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Unpublishing /laundry/motion' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Dequeued all entries' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check the messages endeque via high water mark
mosquitto_pub -h ${MQTT_BROKER} -t /attic/motion -m 12.65
get_log_lines
# not high value enough
grep --quiet -E 'Publishing /attic/motion' ${TMP_OUTPUT} && { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
mosquitto_pub -h ${MQTT_BROKER} -t /attic/motion -m 12.9
get_log_lines
grep --quiet -E 'Publishing /attic/motion' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check the messages with same priority
mosquitto_pub -h ${MQTT_BROKER} -t /laundry/motion -m "on"
sleep 6
get_log_lines 6
CNT=$(grep --count -E 'Publishing ' ${TMP_OUTPUT})
[ ${CNT} -ge 2 ] || { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
CNT=$(grep --count -E 'Unpublishing ' ${TMP_OUTPUT})
[ ${CNT} -ge 2 ] || { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Expired /laundry/motion' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check that messages with higher priority become active
mosquitto_pub -h ${MQTT_BROKER} -t /bathroom -m yeah
get_log_lines
grep --quiet -E 'Enqueued /bathroom is possibly the one to be activated' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Unpublishing /attic/motion as current_active_topic. mqtt topic: /msg' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Publishing /bathroom as current_active_topic. mqtt topic: /restroom' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check re-promotion of previously demoted message
mosquitto_pub -h ${MQTT_BROKER} -t /bathroom -m bye
get_log_lines
grep --quiet -E 'Dequeued /bathroom was the active entry' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Publishing /attic/motion as current_active_topic. mqtt topic: /msg' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo TEST: Check the messages deque via low water mark
mosquitto_pub -h ${MQTT_BROKER} -t /attic/motion -m off
get_log_lines
# not an integer value and this topic has no 'off' handler
grep --quiet -E 'Unpublishing /attic/motion' ${TMP_OUTPUT} && { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
mosquitto_pub -h ${MQTT_BROKER} -t /attic/motion -m 11
get_log_lines
# not low value enough
grep --quiet -E 'Unpublishing /attic/motion' ${TMP_OUTPUT} && { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
mosquitto_pub -h ${MQTT_BROKER} -t /attic/motion -m 0
get_log_lines
grep --quiet -E 'Unpublishing /attic/motion' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Dequeued /attic/motion' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }
grep --quiet -E 'Dequeued all entries' ${TMP_OUTPUT} || \
  { echo "FAILED in $0 line ${LINENO}" >&2; exit ${LINENO}; }

echo 'PASSED: Happy happy, joy joy!'
rm -f ${TMP_OUTPUT}
exit 0
